services:
  postgres:
    image: 'postgres:latest'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - 'POSTGRES_DB=postgres'
      - 'POSTGRES_PASSWORD=postgres'
      - 'POSTGRES_USER=postgres'
    ports:
      - '5432:5432'
  gemfire-locator-0:
    depends_on:
      postgres:
        condition: service_started
    image: gemfire/gemfire-all:10.1-jdk17
    command: gfsh start locator --name=locator-0 --hostname-for-clients=gemfire-locator-0 --J='-Dgemfire.jmx-manager-hostname-for-clients=gemfire-locator-0'
    environment:
      - ACCEPT_TERMS=y
    ports:
      - "10334:10334"
      - "7070:7070"
      - "1099:1099"
    expose:
      - 10334
      - 7070
      - 1099
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7070/management/v1/members/locator-0"]
      interval: 30s
      start_interval: 5s
      start_period: 20s
      retries: 5
    networks: [gemfire-cluster-networks]
  pdx-configurator:
    image: gemfire/gemfire-all:10.1-jdk17
    depends_on:
      gemfire-locator-0:
        condition: service_healthy
    environment:
      - ACCEPT_TERMS=y
    command: |
      sh -c "
        echo 'Configuring PDX...' &&
        gfsh -e 'connect --jmx-manager=gemfire-locator-0[1099]' -e 'configure pdx --read-serialized=true --disk-store' &&
        echo 'PDX configuration complete'
      "
    networks: [ gemfire-cluster-networks ]
    restart: "no"
  gemfire-server-0:
    image: gemfire/gemfire-all:10.1-jdk17
    depends_on:
      pdx-configurator:
        condition: service_completed_successfully
      gemfire-locator-0:
        condition: service_healthy
    command: gfsh start server --name=server-0 --locators=gemfire-locator-0[10334] --server-port=40405 --hostname-for-clients=localhost --start-rest-api --http-service-port=7070
    environment:
      - ACCEPT_TERMS=y
    ports:
      - "7071:7070"
      - "40405:40405"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7070/gemfire-api/v1/ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks: [ gemfire-cluster-networks ]
  region-configurator:
    image: gemfire/gemfire-all:10.1-jdk17
    depends_on:
      gemfire-server-0:
        condition: service_healthy
    environment:
      - ACCEPT_TERMS=y
    command: |
      sh -c "
        echo 'Configuring Region...' &&
        gfsh -e 'connect --locator=gemfire-locator-0[10334]' -e 'create region --name=stores --type=REPLICATE --skip-if-exists=true' &&
        echo 'Region configuration complete'
      "
    networks: [ gemfire-cluster-networks ]
    restart: "no"
#  management-console:
#    image: gemfire/gemfire-management-console:latest
#    ports:
#      - "7072:8080"
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
#      interval: 30s
#      start_interval: 5s
#      start_period: 20s
#      retries: 5
#    depends_on:
#      gemfire-locator-0:
#        condition: service_healthy
#    links:
#      - gemfire-locator-0
#    networks: [gemfire-cluster-networks]
networks:
  gemfire-cluster-networks:
    driver: bridge